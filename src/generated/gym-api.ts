/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import * as axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

export interface WorkoutSessionRequest {
    coachUuid: string;
    hallUuid: string;
    date: string;
    title: string;
    description: string;
}

export interface Card {
    uuid?: string;
    country?: Country;
    cardNumber: string;
    cvv: string;
    dateOfBirth: string;
    nameOnCard: string;
    postalCode: string;
}

export interface Country {
    uuid?: string;
    countryName: string;
}

export interface Exercise {
    uuid?: string;
    name?: string;
    targetMuscles?: TargetMuscle[];
}

export interface Hall {
    uuid?: string;
    hallType?: HallType;
    hallName?: string;
    hallDescription?: string;
}

export interface HallType {
    uuid?: string;
    name?: string;
}

export interface Membership {
    uuid?: string;
    purchaseDate?: string;
    validUntil?: string;
    membershipType?: MembershipType;
}

export interface MembershipType {
    uuid?: string;
    type?: string;
    price?: number;
}

export interface TargetMuscle {
    uuid?: string;
    name?: string;
}

export interface User {
    uuid?: string;
    role?: UserRole;
    card?: Card;
    membership?: Membership;
    firstName: string;
    lastName: string;
    dateOfBirth: string;
    email?: string;
    phoneNumber?: string;
    imageUrl?: string;
}

export interface UserRole {
    uuid?: string;
    role?: string;
}

export interface WorkoutSessionDto {
    uuid?: string;
    coach?: User;
    hall?: Hall;
    date?: string;
    title?: string;
    description?: string;
    attendants?: User[];
    exercises?: WorkoutSessionExerciseDto[];
}

export interface WorkoutSessionExerciseDto {
    uuid?: string;
    exercise?: Exercise;
    reps?: number;
    exerciseOrder?: number;
}

export interface WorkoutSessionExerciseRequest {
    exerciseUuid: string;
    reps: number;
    exerciseOrder: number;
}

export interface WorkoutSessionAttendantRequest {
    userUuid: string;
}

export interface UserRequest {
    roleUuid: string;
    cardUuid: string;
    membershipUuid: string;
    firstName: string;
    lastName: string;
    dateOfBirth: string;
    email: string;
    phoneNumber: string;
    imageUrl: string;
}

export interface UserDto {
    uuid?: string;
    role?: UserRole;
    card?: Card;
    membership?: Membership;
    firstName?: string;
    lastName?: string;
    dateOfBirth?: string;
    email?: string;
    phoneNumber?: string;
    imageUrl?: string;
}

export interface CreateTargetMuscleRequest {
    /** @minLength 1 */
    name?: string;
}

export interface TargetMuscleDto {
    uuid?: string;
    name?: string;
}

export interface PaymentRequest {
    cardUuid: string;
    statusUuid: string;
    membershipUuid: string;
}

export interface PaymentDto {
    uuid?: string;
    card?: Card;
    status?: PaymentStatus;
    membership?: Membership;
}

export interface PaymentStatus {
    uuid?: string;
    status?: string;
}

export interface MembershipRequest {
    purchaseDate: string;
    validUntil: string;
    membershipTypeUuid: string;
}

export interface MembershipDto {
    uuid?: string;
    purchaseDate?: string;
    validUntil?: string;
    membershipType?: MembershipType;
}

export interface MembershipTypeRequest {
    type: string;
    price: number;
}

export interface MembershipTypeDto {
    uuid?: string;
    type?: string;
    price?: number;
}

export interface MaintenanceTaskRequest {
    maintainerUuid: string;
    hallUuid: string;
    plannedStartDate: string;
    plannedEndDate: string;
    description: string;
}

export interface MaintenanceTaskDto {
    uuid?: string;
    maintainer?: User;
    maintenanceHall?: Hall;
    plannedStartDate?: string;
    plannedEndDate?: string;
    description?: string;
}

export interface HallRequest {
    hallTypeUuid: string;
    hallName: string;
    hallDescription: string;
}

export interface HallDto {
    uuid?: string;
    hallType?: HallType;
    hallName?: string;
    hallDescription?: string;
}

export interface CreateExerciseRequest {
    name?: string;
    targetMuscles?: string[];
}

export interface ExerciseDto {
    uuid?: string;
    name?: string;
    targetMuscles?: TargetMuscleDto[];
}

export interface ChatDto {
    uuid?: string;
    participants?: ChatParticipantDto[];
}

export interface ChatParticipantDto {
    uuid?: string;
    user?: User;
    lastReadDateTime?: string;
}

export interface ChatParticipantCreateRequest {
    userUuid: string;
    lastReadDateTime?: string;
}

export interface CardRequest {
    countryUuid: string;
    cardNumber: string;
    cvv: string;
    dateOfBirth: string;
    nameOnCard: string;
    postalCode: string;
}

export interface CardDto {
    uuid?: string;
    country?: Country;
    cardNumber?: string;
    cvv?: string;
    dateOfBirth?: string;
    nameOnCard?: string;
    postalCode?: string;
}

export interface ChatParticipantPatchRequest {
    lastReadDateTime: string;
}

export interface UserRoleDto {
    uuid?: string;
    role?: string;
}

export interface PaymentStatusDto {
    uuid?: string;
    status?: string;
}

export interface HallTypeDto {
    uuid?: string;
    name?: string;
}

export interface CountryDto {
    uuid?: string;
    countryName?: string;
}

export const listWorkoutSessions = <TData = AxiosResponse<WorkoutSessionDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/workout-sessions`, options);
};

export const createWorkoutSession = <TData = AxiosResponse<WorkoutSessionDto>>(
    workoutSessionRequest: WorkoutSessionRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/workout-sessions`, workoutSessionRequest, options);
};

export const addWorkoutSessionExercise = <TData = AxiosResponse<WorkoutSessionDto>>(
    id: string,
    workoutSessionExerciseRequest: WorkoutSessionExerciseRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(
        `/workout-sessions/${id}/exercises`,
        workoutSessionExerciseRequest,
        options
    );
};

export const addWorkoutSessionAttendant = <TData = AxiosResponse<WorkoutSessionDto>>(
    id: string,
    workoutSessionAttendantRequest: WorkoutSessionAttendantRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(
        `/workout-sessions/${id}/attendants`,
        workoutSessionAttendantRequest,
        options
    );
};

export const listUsers = <TData = AxiosResponse<UserDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/users`, options);
};

export const createUser = <TData = AxiosResponse<UserDto>>(
    userRequest: UserRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/users`, userRequest, options);
};

export const listTargetMuscles = <TData = AxiosResponse<TargetMuscleDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/target-muscles`, options);
};

export const createTargetMuscle = <TData = AxiosResponse<TargetMuscleDto>>(
    createTargetMuscleRequest: CreateTargetMuscleRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/target-muscles`, createTargetMuscleRequest, options);
};

export const listPayments = <TData = AxiosResponse<PaymentDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/payments`, options);
};

export const createPayment = <TData = AxiosResponse<PaymentDto>>(
    paymentRequest: PaymentRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/payments`, paymentRequest, options);
};

export const listMemberships = <TData = AxiosResponse<MembershipDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/memberships`, options);
};

export const createMembership = <TData = AxiosResponse<MembershipDto>>(
    membershipRequest: MembershipRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/memberships`, membershipRequest, options);
};

export const listMembershipTypes = <TData = AxiosResponse<MembershipTypeDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/membership-types`, options);
};

export const createMembershipType = <TData = AxiosResponse<MembershipTypeDto>>(
    membershipTypeRequest: MembershipTypeRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/membership-types`, membershipTypeRequest, options);
};

export const listMaintenanceTasks = <TData = AxiosResponse<MaintenanceTaskDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/maintenance-tasks`, options);
};

export const createMaintenanceTask = <TData = AxiosResponse<MaintenanceTaskDto>>(
    maintenanceTaskRequest: MaintenanceTaskRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/maintenance-tasks`, maintenanceTaskRequest, options);
};

export const listHalls = <TData = AxiosResponse<HallDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/halls`, options);
};

export const createHall = <TData = AxiosResponse<HallDto>>(
    hallRequest: HallRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/halls`, hallRequest, options);
};

export const listExercises = <TData = AxiosResponse<ExerciseDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/exercises`, options);
};

export const createExercise = <TData = AxiosResponse<ExerciseDto>>(
    createExerciseRequest: CreateExerciseRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/exercises`, createExerciseRequest, options);
};

export const createChat = <TData = AxiosResponse<ChatDto>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/chats`, undefined, options);
};

export const addChatParticipant = <TData = AxiosResponse<ChatParticipantDto>>(
    id: string,
    chatParticipantCreateRequest: ChatParticipantCreateRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/chats/${id}/participants`, chatParticipantCreateRequest, options);
};

export const listCards = <TData = AxiosResponse<CardDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/cards`, options);
};

export const createCard = <TData = AxiosResponse<CardDto>>(
    cardRequest: CardRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.post(`/cards`, cardRequest, options);
};

export const getWorkoutSession = <TData = AxiosResponse<WorkoutSessionDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/workout-sessions/${id}`, options);
};

export const updateCard = <TData = AxiosResponse<WorkoutSessionDto>>(
    id: string,
    workoutSessionRequest: WorkoutSessionRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/workout-sessions/${id}`, workoutSessionRequest, options);
};

export const getUser = <TData = AxiosResponse<UserDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/users/${id}`, options);
};

export const updateUser = <TData = AxiosResponse<UserDto>>(
    id: string,
    userRequest: UserRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/users/${id}`, userRequest, options);
};

export const getPayment = <TData = AxiosResponse<PaymentDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/payments/${id}`, options);
};

export const updatePayment = <TData = AxiosResponse<PaymentDto>>(
    id: string,
    paymentRequest: PaymentRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/payments/${id}`, paymentRequest, options);
};

export const getMembership = <TData = AxiosResponse<MembershipDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/memberships/${id}`, options);
};

export const patchMembership = <TData = AxiosResponse<MembershipDto>>(
    id: string,
    membershipRequest: MembershipRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/memberships/${id}`, membershipRequest, options);
};

export const getMembershipType = <TData = AxiosResponse<MembershipTypeDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/membership-types/${id}`, options);
};

export const updateCard1 = <TData = AxiosResponse<MembershipTypeDto>>(
    id: string,
    membershipTypeRequest: MembershipTypeRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/membership-types/${id}`, membershipTypeRequest, options);
};

export const getMaintenanceTask = <TData = AxiosResponse<MaintenanceTaskDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/maintenance-tasks/${id}`, options);
};

export const deleteMaintenanceTask = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.delete(`/maintenance-tasks/${id}`, options);
};

export const updateMaintenanceTask = <TData = AxiosResponse<MaintenanceTaskDto>>(
    id: string,
    maintenanceTaskRequest: MaintenanceTaskRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/maintenance-tasks/${id}`, maintenanceTaskRequest, options);
};

export const getHall = <TData = AxiosResponse<HallDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/halls/${id}`, options);
};

export const updateHall = <TData = AxiosResponse<HallDto>>(
    id: string,
    hallRequest: HallRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/halls/${id}`, hallRequest, options);
};

export const updateChatParticipant = <TData = AxiosResponse<ChatParticipantDto>>(
    id: string,
    userId: string,
    chatParticipantPatchRequest: ChatParticipantPatchRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(
        `/chats/${id}/participants/${userId}`,
        chatParticipantPatchRequest,
        options
    );
};

export const getCard = <TData = AxiosResponse<CardDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/cards/${id}`, options);
};

export const updateCard2 = <TData = AxiosResponse<CardDto>>(
    id: string,
    cardRequest: CardRequest,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.patch(`/cards/${id}`, cardRequest, options);
};

export const listChats = <TData = AxiosResponse<ChatDto[]>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/users/${id}/chats`, options);
};

export const listUserRoles = <TData = AxiosResponse<UserRoleDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/user-roles`, options);
};

export const listPaymentStatuses = <TData = AxiosResponse<PaymentStatusDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/payment-statuses`, options);
};

export const listHallTypes = <TData = AxiosResponse<HallTypeDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/hall-types`, options);
};

export const getCountry = <TData = AxiosResponse<CountryDto[]>>(
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/countries`, options);
};

export const getChat = <TData = AxiosResponse<ChatDto>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.get(`/chats/${id}`, options);
};

export const deleteWorkoutSessionExercise = <TData = AxiosResponse<void>>(
    id: string,
    exerciseId: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.delete(`/workout-sessions/${id}/exercises/${exerciseId}`, options);
};

export const deleteWorkoutSessionAttendant = <TData = AxiosResponse<void>>(
    id: string,
    userId: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.delete(`/workout-sessions/${id}/attendants/${userId}`, options);
};

export const deleteTargetMuscle = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.delete(`/target-muscles/${id}`, options);
};

export const deleteExercise = <TData = AxiosResponse<void>>(
    id: string,
    options?: AxiosRequestConfig
): Promise<TData> => {
    return axios.default.delete(`/exercises/${id}`, options);
};

export type ListWorkoutSessionsResult = AxiosResponse<WorkoutSessionDto[]>;
export type CreateWorkoutSessionResult = AxiosResponse<WorkoutSessionDto>;
export type AddWorkoutSessionExerciseResult = AxiosResponse<WorkoutSessionDto>;
export type AddWorkoutSessionAttendantResult = AxiosResponse<WorkoutSessionDto>;
export type ListUsersResult = AxiosResponse<UserDto[]>;
export type CreateUserResult = AxiosResponse<UserDto>;
export type ListTargetMusclesResult = AxiosResponse<TargetMuscleDto[]>;
export type CreateTargetMuscleResult = AxiosResponse<TargetMuscleDto>;
export type ListPaymentsResult = AxiosResponse<PaymentDto[]>;
export type CreatePaymentResult = AxiosResponse<PaymentDto>;
export type ListMembershipsResult = AxiosResponse<MembershipDto[]>;
export type CreateMembershipResult = AxiosResponse<MembershipDto>;
export type ListMembershipTypesResult = AxiosResponse<MembershipTypeDto[]>;
export type CreateMembershipTypeResult = AxiosResponse<MembershipTypeDto>;
export type ListMaintenanceTasksResult = AxiosResponse<MaintenanceTaskDto[]>;
export type CreateMaintenanceTaskResult = AxiosResponse<MaintenanceTaskDto>;
export type ListHallsResult = AxiosResponse<HallDto[]>;
export type CreateHallResult = AxiosResponse<HallDto>;
export type ListExercisesResult = AxiosResponse<ExerciseDto[]>;
export type CreateExerciseResult = AxiosResponse<ExerciseDto>;
export type CreateChatResult = AxiosResponse<ChatDto>;
export type AddChatParticipantResult = AxiosResponse<ChatParticipantDto>;
export type ListCardsResult = AxiosResponse<CardDto[]>;
export type CreateCardResult = AxiosResponse<CardDto>;
export type GetWorkoutSessionResult = AxiosResponse<WorkoutSessionDto>;
export type UpdateCardResult = AxiosResponse<WorkoutSessionDto>;
export type GetUserResult = AxiosResponse<UserDto>;
export type UpdateUserResult = AxiosResponse<UserDto>;
export type GetPaymentResult = AxiosResponse<PaymentDto>;
export type UpdatePaymentResult = AxiosResponse<PaymentDto>;
export type GetMembershipResult = AxiosResponse<MembershipDto>;
export type PatchMembershipResult = AxiosResponse<MembershipDto>;
export type GetMembershipTypeResult = AxiosResponse<MembershipTypeDto>;
export type UpdateCard1Result = AxiosResponse<MembershipTypeDto>;
export type GetMaintenanceTaskResult = AxiosResponse<MaintenanceTaskDto>;
export type DeleteMaintenanceTaskResult = AxiosResponse<void>;
export type UpdateMaintenanceTaskResult = AxiosResponse<MaintenanceTaskDto>;
export type GetHallResult = AxiosResponse<HallDto>;
export type UpdateHallResult = AxiosResponse<HallDto>;
export type UpdateChatParticipantResult = AxiosResponse<ChatParticipantDto>;
export type GetCardResult = AxiosResponse<CardDto>;
export type UpdateCard2Result = AxiosResponse<CardDto>;
export type ListChatsResult = AxiosResponse<ChatDto[]>;
export type ListUserRolesResult = AxiosResponse<UserRoleDto[]>;
export type ListPaymentStatusesResult = AxiosResponse<PaymentStatusDto[]>;
export type ListHallTypesResult = AxiosResponse<HallTypeDto[]>;
export type GetCountryResult = AxiosResponse<CountryDto[]>;
export type GetChatResult = AxiosResponse<ChatDto>;
export type DeleteWorkoutSessionExerciseResult = AxiosResponse<void>;
export type DeleteWorkoutSessionAttendantResult = AxiosResponse<void>;
export type DeleteTargetMuscleResult = AxiosResponse<void>;
export type DeleteExerciseResult = AxiosResponse<void>;
